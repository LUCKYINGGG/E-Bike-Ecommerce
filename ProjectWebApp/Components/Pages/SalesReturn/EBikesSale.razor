@page "/pages/EBikesSale"
@using System.Security.Claims
 @inject AuthenticationStateProvider authenticationStateProvider;

<PageTitle>Bike Sales</PageTitle>

<h3>eBikes Sale</h3>



@if (HasErrorMessage)
{
    <MudAlert Elevation="2" Severity="Severity.Error" Dense="true">
        <MudText Typo="Typo.h6">@_errorMessage</MudText>
        @foreach (var error in _errorDetails)
        {
            <MudText Typo="Typo.body2">@error</MudText>
        }

    </MudAlert>
}

@if (HasFeedbackMessage)
{
    <MudAlert Elevation="2" Severity="Severity.Info" Dense="true">
        <MudText Typo="Typo.h6">@_feedbackMessage</MudText>
    </MudAlert>
}

<MudStack Row="true" Spacing="4" AlignItems="AlignItems.Center">
    <MudTextField @bind-Value="_phoneNumber" Label="Phone Number (Partial)" Variant="Variant.Text" />
    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => Search()">Search</MudButton>
    <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="CustomerClear">Clear</MudButton>
</MudStack>

@if (Customers.Count > 0)
{
    <MudDataGrid Items="Customers" Striped="true" FixedFooter="true" FixedHeader="true" Height="35vh" Class="mt-4">
        <Columns>
            <TemplateColumn>
                <HeaderTemplate>Action</HeaderTemplate>

                <CellTemplate>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => SelectCustomer(context.Item.CustomerID)">Select</MudButton>
                </CellTemplate>

            </TemplateColumn>

            <PropertyColumn Property="x => x.FullName" Title="Name" />
            <PropertyColumn Property="x => x.PhoneNumber " Title="Phone" />
            <PropertyColumn Property="x => x.Address " Title="Address" />
        </Columns>

    </MudDataGrid>
}
else
{
    <NoRecordsContent>
        <MudText Typo="Typo.h6">
            @((_noResults ? "No customers found."
                    : "Please search for customers."))
        </MudText>
    </NoRecordsContent>
}
@if (_saleDetails.Count > 0)
{
    <MudForm @ref="_customerForm" @bind-IsValid="_isFormValid" @bind-IsTouched="_hasDataChanged">
        <MudItem>
            <MudStack Row="true" Spacing="4">
                <MudSelect T="int" Variant="Variant.Outlined" Label="Parts Category" Value="_category.CategoryID" ValueChanged="value => SelectPartCategory(value)">
                    @foreach (var item in _listOfCategories)
                    {
                        <MudSelectItem T="int" Value="@item.CategoryID">@item.Description</MudSelectItem>
                    }
                </MudSelect>
                <MudSelect T="int" Variant="Variant.Outlined" Label="Parts" Value="_part.PartID" ValueChanged="value => SelectParts(value)">
                    @foreach (var item in _listOfParts)
                    {
                        <MudSelectItem T="int" Value="@item.PartID">@item.Description</MudSelectItem>
                    }
                </MudSelect>
                <MudNumericField Label="Standard" Variant="Variant.Text" Min="0" Max="10" />
                <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="PartClear" >Clear</MudButton>
            </MudStack>
            <MudTable Items="_saleDetails.Where(x => _selectedCustomer.CustomerID == _sale.CustomerID)">
                <HeaderContent>
                    <MudTh>Part</MudTh>
                    <MudTh>Price</MudTh>
                    <MudTh>Quantity</MudTh>
                    <MudTh>Ext Price</MudTh>
                </HeaderContent>
                <RowTemplate Context="item">
                    <MudTd>@item.PartID</MudTd>
                    <MudTd>@item.SellingPrice.ToString()</MudTd>
                    <MudTd>@item.Quantity</MudTd>
                    <MudTd>@(item.SellingPrice * item.Quantity)</MudTd>
                    <MudTd>
                        <MudButton Color="Color.Primary" OnClick="() => AddPartsToCart()">
                            <MudIcon Icon="@Icons.Material.Filled.Add" />
                            <MudText>ADD</MudText>
                        </MudButton>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        </MudItem>
    </MudForm>
}

<MudPaper Elevation="4" Class="my-5">
    <MudText Typo="Typo.h5" Class="my-3 py-3">Logged In Information:</MudText>
    <MudStack Row="true" Spacing="4" Class="py-3">
        <p>UserID: @userId</p>
        <p>Employee Name: @employeeName</p>
        <p>User Roles: @(roles.Any() ? string.Join(",", roles) : "None")</p>
    </MudStack>
</MudPaper>